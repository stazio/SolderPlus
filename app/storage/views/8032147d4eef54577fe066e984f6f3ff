<?php $__env->startSection('title'); ?>
    <title>New Build - <?php echo $modpack->name; ?> - TechnicSolder</title>
<?php $__env->stopSection(); ?>
<?php $__env->startSection('content'); ?>
<div class="page-header">
<h1>Build Management</h1>
</div>
<div class="panel panel-default">
	<div class="panel-heading">
	Create New Build (<?php echo $modpack->name; ?>)
	</div>
	<div class="panel-body">

		<?php if($errors->all()): ?>
			<div class="alert alert-danger">
			<?php foreach($errors->all() as $error): ?>
				<?php echo $error; ?><br />
			<?php endforeach; ?>
			</div>
		<?php endif; ?>
		<?php echo Form::open(); ?>

		<div class="row">
			<div class="col-md-6">
				<h4>Create Build</h4>
				<p>All new builds by default will not be available in the API. They need to be published before they will show up.</p>
				<hr>
				<div class="form-group">
					<label for="version">Build Number</label>
					<input type="text" class="form-control" name="version" id="version">
				</div>
				<div class="form-group">
					<label for="version">Minecraft Version</label>
					<select class="form-control" name="minecraft">
						<?php foreach($minecraft as $version): ?>
						<option value="<?php echo $version['version']; ?>"
								<?php echo ($buildS and $buildS->minecraft == $version['version']) ? "selected" : ""; ?>

						><?php echo $version['version']; ?></option>
						<?php endforeach; ?>
					</select>
				</div>
				<div class="form-group">
					<label for="clone">Clone Build</label>
					<select class="form-control" name="clone">
						<option value="">Do not clone</option>
						<?php foreach($modpack->builds as $build): ?>
							<option value="<?php echo $build->id; ?>" <?php echo ($buildS and $buildS->id == $build->id) ? "selected" : ""; ?>><?php echo $build->version; ?></option>
						<?php endforeach; ?>
					</select>
					<p class="help-block">This will clone all the mods and mod versions of another build in this pack.</p>
				</div>
			</div>
			<div class="col-md-6">
				<h4>Build Requirements</h4>
				<p>These are requirements that are passed onto the launcher to prevent players from playing your pack without the required minumum settings</p>
				<hr>
				<div class="form-group">
					<label for="java-version">Minimum Java Version</label>
					<select class="form-control" name="java-version" id="java-version">
						<option value="1.8" <?php echo ($buildS and $buildS->min_java == "1.8")  ? "selected" : ""; ?>>Java 1.8</option>
						<option value="1.7" <?php echo ($buildS and $buildS->min_java == "1.7")  ? "selected" : ""; ?>>Java 1.7</option>
						<option value="1.6" <?php echo ($buildS and $buildS->min_java == "1.6")  ? "selected" : ""; ?>>Java 1.6</option>
						<option value="" 	<?php echo ($buildS and $buildS->min_java == null) ? "selected" : ""; ?>>No Requirement</option>
					</select>
				</div>
				<div class="form-group">
					<label for="memory">Minimum Memory (<i>in MB</i>)</label>
					<div class="input-group">
						<span class="input-group-addon">
							<input  <?php echo ($buildS and $buildS->min_memory > 0) ? "checked" : ""; ?>


									type="checkbox" id="memory-enabled" name="memory-enabled" aria-label="mb">
						</span>
						<input <?php echo ($buildS and $buildS->min_memory > 0) ? "" : "disabled"; ?>

							   type="text" class="form-control" name="memory"
							   id="memory" aria-label="mb" aria-describedby="addon-mb" value="<?php echo ($buildS and $buildS->min_memory > 0) ? $buildS->min_memory : ""; ?>">
						<span class="input-group-addon" id="addon-mb">MB</span>
					</div>
					<p class="help-block">Check the checkbox to enable the memory requirement.</p>
				</div>
			</div>
		</div>
		<hr>
		<?php echo Form::submit('Add Build', array('class' => 'btn btn-success')); ?>

		<?php echo HTML::link('modpack/view/'.$modpack->id, 'Go Back', array('class' => 'btn btn-primary')); ?>

		<?php echo Form::close(); ?>

	</div>
</div>
<?php $__env->stopSection(); ?>
<?php $__env->startSection('bottom'); ?>
<script type="text/javascript">
$('#memory-enabled').change(function(){
    if ($('#memory-enabled').is(':checked') == true){
        $('#memory').prop('disabled', false);
    } else {
        $('#memory').val('').prop('disabled', true);
    }
});
</script>
<?php $__env->stopSection(); ?>

<?php echo $__env->make('layouts/master', array_except(get_defined_vars(), array('__data', '__path')))->render(); ?>